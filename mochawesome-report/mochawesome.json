{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-11-08T21:39:49.581Z",
    "end": "2022-11-08T21:39:56.393Z",
    "duration": 6812,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "43817440-0496-4270-8d27-ef0e026713de",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\TestDataDriven.js",
      "file": "cypress\\integration\\examples\\TestDataDriven.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9d9ffc5b-2062-45e5-84de-ff5ddafd9faf",
          "title": "Frames Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Demo Example",
              "fullTitle": "Frames Test Demo Example",
              "timedOut": null,
              "duration": 4496,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://rahulshettyacademy.com/angularpractice/\"); //I am getting data from fixture file. I am using 'this.data' as 'this.data' is available to use everywhere in the test\ncy.get('input[name=\"name\"]:nth-child(2)').type(this.data.name);\ncy.get('select').select(this.data.gender); //validating two way data binding\ncy.get(':nth-child(4) > .ng-untouched').should('have.value', this.data.name); //Validating property minlenth is 2 (Minimum 2 character must to work functionality)\n//Here jQuery does not have 'minlength' so we can use 'attr' for it and for all attributes that jQuery does not have\ncy.get('input[name=\"name\"]:nth-child(2)').should('have.attr', 'minlength', 2); //Validating if the radio button is disabled or not\ncy.get('#inlineRadio3').should('be.disabled'); //The script will pause at this point. It is like puting a page break in Selenium for debugging\n//we can use \"\".debug\" also at the end of a syntax. That also works as 'pause'\n//once problem is solved then this 'pause' should be deleted otherwise everytime it will pause here\n////cy.pause()\n//Clicking on Shop\ncy.get(':nth-child(2) > .nav-link').click(); ////This is the hard coding way to work. We are not gonna hard code\n////we will make a custom command in \"support/command\" and will call it. It is shown below from line 65\n/*\n    //Validating to click on add button of Blackbery mobile\n    cy.get('h4.card-title').each(($el, index, $list) => {\n\n      if($el.text().includes('Blackberry')){\n\n        //if class value has space in between then use . instead of space to locate by that elelent\n        cy.get('button.btn.btn-info').eq(index).click()\n\n      }\n    })\n*/\n//We are using customed command for above group commented task\n//pls see the support/command for customed method created over there\n////cy.selectProduct('Blackberry')\n////cy.selectProduct('Nokia Edge')\n//Instead of writing multiple lines we can put the data in example file and drive the data from there\n//Here I am using [\"abc,\"\"xyz\"] and call that in test case to apply that array\n//Array for JS to get data\nthis.data.productName.forEach(function (element) {\n  cy.log(element); //Passing the data in the below syntax\n  cy.selectProduct(element);\n});",
              "err": {},
              "uuid": "eed34372-d674-4be2-8fa0-931e265732cc",
              "parentUUID": "9d9ffc5b-2062-45e5-84de-ff5ddafd9faf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eed34372-d674-4be2-8fa0-931e265732cc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4496,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}